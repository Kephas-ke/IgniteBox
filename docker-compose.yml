version: '3.9'

services:
  db:
    image: mysql:8.4
    container_name: ignitebox_db
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./Backend/IgniteBox_MySQL_session.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/mysql
    networks:
      - ignitebox_network

  memcached:
    image: memcached:latest
    container_name: ignitebox_memcached
    restart: always
    ports:
      - "11211:11211"
    networks:
      - ignitebox_network

  backend:
    build: ./Backend
    container_name: ignitebox_backend
    restart: always
    volumes:
      - ./Backend/src:/var/www/html
      - ./Backend/writable:/var/www/html/writable
    env_file:
      - ./Backend/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    expose:
      - "80"        # Backend serves HTTP (PHP built-in or FPM via port 80)
    depends_on:
      - db
      - memcached
    networks:
      - ignitebox_network

  nginx:
    image: nginx:stable
    container_name: ignitebox_nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./Frontend/dist:/usr/share/nginx/html   # Serve frontend build
      - ./Backend/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
    networks:
      - ignitebox_network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: ignitebox_frontend
    working_dir: /app
    volumes:
      - ./Frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173" # Vite dev server
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - VITE_API_URL=http://ignitebox_backend:80   # Calls backend directly
    command: ["npm", "run", "dev", "--", "--host"]
    depends_on:
      - backend
    networks:
      - ignitebox_network

volumes:
  db_data:

networks:
  ignitebox_network:
    driver: bridge
